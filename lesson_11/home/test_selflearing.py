import pytest
from selflearning02 import *

"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 1. greeting(name)
–°—Ç–≤–æ—Ä–∏ —Ç–µ—Å—Ç–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î "–ü—Ä–∏–≤—ñ—Ç, {name}!"
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –ø–µ—Ä–µ–¥–∞—Ç–∏ –∑–≤–∏—á–∞–π–Ω–µ —ñ–º'—è ("–û–ª—è")
- –ø–µ—Ä–µ–¥–∞—Ç–∏ –ø—É—Å—Ç–∏–π —Ä—è–¥–æ–∫
- –ø–µ—Ä–µ–¥–∞—Ç–∏ —ñ–º'—è –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏ ("–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ")
"""
def test_greeting():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 2. calculate_area(length, width)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ —á–∏—Å–ª–∞ (5, 3)
- –æ–¥–Ω–µ –∑ —á–∏—Å–µ–ª = 0
- –¥—Ä–æ–±–æ–≤—ñ —á–∏—Å–ª–∞ (2.5, 4.2)
"""
def test_calculate_area():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 3. is_even(number)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ (4)
- –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ (7)
- –≤—ñ–¥‚Äô—î–º–Ω–µ –ø–∞—Ä–Ω–µ (-2)
- –≤—ñ–¥‚Äô—î–º–Ω–µ –Ω–µ–ø–∞—Ä–Ω–µ (-3)
"""
def test_is_even():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 4. create_profile(name, age, city, profession)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ name —ñ age
- –ø–µ—Ä–µ–¥–∞—Ç–∏ –≤—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
- –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç–∏ city/profession ‚Üí –º–∞—î –±—É—Ç–∏ "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
"""
def test_create_profile():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 5. calculate_price(base_price, discount, tax)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –±–µ–∑ –∑–Ω–∏–∂–∫–∏, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–æ–¥–∞—Ç–æ–∫
- –∑—ñ –∑–Ω–∏–∂–∫–æ—é 10%
- –∑ –Ω—É–ª—å–æ–≤–∏–º –ø–æ–¥–∞—Ç–∫–æ–º
- –∑ –≤–µ–ª–∏–∫–æ—é –∑–Ω–∏–∂–∫–æ—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 100%)
"""
def test_calculate_price():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 6. sum_all(*args)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –∫—ñ–ª—å–∫–∞ —á–∏—Å–µ–ª (1, 2, 3, 4)
- –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ ‚Üí 0
- —Å—É–º—ñ—à —Ü—ñ–ª–∏—Ö —ñ –¥—Ä–æ–±–æ–≤–∏—Ö
"""
def test_sum_all():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 7. create_student(**kwargs)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ name —ñ age
- –ø–µ—Ä–µ–¥–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ (group="A1")
- –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç–∏ name ‚Üí –º–∞—î –±—É—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
"""
def test_create_student():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 8. flexible_function(*args, **kwargs)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –∫—ñ–ª—å–∫–∞ –ø–æ–∑–∏—Ü—ñ–π–Ω–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
- —Ç—ñ–ª—å–∫–∏ –∫–ª—é—á–æ–≤—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
- —Å—É–º—ñ—à args —ñ kwargs
"""
def test_flexible_function():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 9. –õ—è–º–±–¥–∞-—Ñ—É–Ω–∫—Ü—ñ—ó
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- square(4) == 16
- is_greater_than_10(5) == False
- concatenate("Hello", "World") == "HelloWorld"
"""
def test_lambdas():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 10. check_type_vs_isinstance(value, check_type)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- int —ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ int
- bool —ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ int (type() ‚â†, –∞–ª–µ isinstance() =)
- str —ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ str
"""
def test_check_type_vs_isinstance():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 11. sort_vs_sorted_demo(numbers)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- –Ω–µ–≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫
- —Å–ø–∏—Å–æ–∫ —É–∂–µ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π
- —Å–ø–∏—Å–æ–∫ –∑ –≤—ñ–¥‚Äô—î–º–Ω–∏–º–∏ —á–∏—Å–ª–∞–º–∏
"""
def test_sort_vs_sorted_demo():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 12. filter_and_process(data, filter_func, process_func)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- filter_func = lambda x: x > 0, process_func = lambda x: x*2
- —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
- —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è, —â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–∞–ª–∏—à–∞—î
"""
def test_filter_and_process():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 13. create_multiplier(factor)
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- multiplier_2 = create_multiplier(2), multiplier_2(5) == 10
- multiplier_0 = create_multiplier(0), –±—É–¥—å-—è–∫–µ —á–∏—Å–ª–æ ‚Üí 0
- multiplier_neg = create_multiplier(-1), –º–∞—î –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞–∫
"""
def test_create_multiplier():
    pass


"""
üìù –ó–∞–≤–¥–∞–Ω–Ω—è 14. advanced_calculator(*args, operation="...")
–Ü–¥–µ—ó —Ç–µ—Å—Ç—ñ–≤:
- —Å—É–º–∞ —á–∏—Å–µ–ª
- –º–Ω–æ–∂–µ–Ω–Ω—è —á–∏—Å–µ–ª
- –º–∞–∫—Å–∏–º—É–º
- –º—ñ–Ω—ñ–º—É–º
- –≤–∏–∫–ª–∏–∫ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
"""
def test_advanced_calculator():
    pass
